volumes:
    langgraph-data:
        driver: local
services:
    langgraph-redis:
        image: redis:6
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 1s
            retries: 5
    langgraph-postgres:
        image: postgres:16
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - langgraph-data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 60s
            start_interval: 1s
    langgraph-api:
        image: ylz_utils-langgraph-api
        ports:
            - "8123:8000"
        depends_on:
            langgraph-redis:
                condition: service_healthy
            langgraph-postgres:
                condition: service_healthy
        environment:
            REDIS_URI: redis://langgraph-redis:6379
            POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable
        healthcheck:
            test: python /api/healthcheck.py
            interval: 60s
            start_interval: 1s
            start_period: 10sls
        env_file: .env
        pull_policy: build
        build:
            context: .
            dockerfile_inline: |
                FROM langchain/langgraph-api:3.11
                "ADD ./ylz_utils/config.yaml /root/.ylz_utils/",
                "RUN apt-get update",
                "RUN pip install --upgrade pip",
                "RUN pip install poetry",
                "ADD . /deps/ylz_utils",
                "RUN poetry install -C /deps/ylz_utils",
                #ADD . /deps/ylz_utils
                #RUN pip install zipp wrapt mypy_extensions mdurl webencodings
                #RUN PYTHONDONTWRITEBYTECODE=1 pip install --no-cache-dir -c /api/constraints.txt -e /deps/*
                ENV LANGSERVE_GRAPHS='{"life": "/deps/ylz_utils/graph_cloud.py:get_life_graph", "test": "/deps/ylz_utils/graph_cloud.py:get_test_graph"}'
                WORKDIR /deps/ylz_utils

